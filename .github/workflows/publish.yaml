---
name: Publish to PyPI and TestPyPI
# based on https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-the-distribution-to-pypi

# yamllint disable-line rule:truthy
on: push

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a wheel and source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    environment:
      name: pypi
      url: https://pypi.org/p/osbee
    needs: [build]
    permissions:
      contents: write  # able to manage a release or updates
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      pull-requests: write  # Able to manage a release PR
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        # Settings -> Actions -> General -> Workflow Permissions
        # - select "Read repo contents", and
        # - enable "Allow Github Actions to create and approve pull requests"
        id: release
        with:
          release-type: python
      - name: Clone Repo
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4
      - name: Download artifacts
        id: download
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/download-artifact@v5
        with:
          merge-multiple: true
          name: python-package-distributions
          path: dist/
      - name: Upload Release Artifacts
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          find dist -type f -print
          echo download is ${{ steps.download.outputs.download-path }}
          gh release upload ${{ steps.release.outputs.tag_name }} dist/*
      - name: Publish distribution to PyPI
        if: ${{ steps.release.outputs.release_created }}
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/osbee
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
